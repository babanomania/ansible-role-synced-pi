---
- name: Check if /root/.config/rclone directory exists
  become: true
  stat:
    path: "/root/.config/rclone"
  register: rclone_conf
  listen: rclone sync

- name: Create /root/.config/rclone directory
  become: true
  file:
    path: "/root/.config/rclone"
    state: directory
  listen: rclone sync
  when: rclone_conf.stat.exists == False

- name: Ensure rclone is configured
  become: true
  template:
    src: rclone.conf.j2
    dest: /root/.config/rclone/rclone.conf
    owner: root
    group: root
    mode: u=rw,g=rx,o=rx
  listen: rclone sync

- name: Check if backup source directory exists
  stat:
    path: "{{ base_path }}/{{ backup.source_path }}"
  register: backup_sync
  listen: rclone sync

- name: Create backup source directory
  become: true
  become_user: "{{ ansible_user }}"
  file:
    path: "{{ base_path }}/{{ backup.source_path }}"
    state: directory
  listen: rclone sync
  when: backup_sync.stat.exists == False

- name: Clean the borgrepo directory
  become: true
  become_user: "{{ ansible_user }}"
  file:
    path: "{{ base_path }}/{{ borg_repo_path }}"
    state: absent
  listen: rclone sync
  when:
    - backup_sync.stat.exists == True
    - data_restore == True

- name: Create borgrepo directory
  become: true
  become_user: "{{ ansible_user }}"
  file:
    path: "{{ base_path }}/{{ borg_repo_path }}"
    state: directory
  listen: rclone sync
  when: backup_sync.stat.exists == False

- name: Restore from online backups
  command: "sudo rclone sync remote:{{ rclone_remote_path }} {{ base_path }}/{{ borg_repo_path }}"
  listen: rclone sync
  when: data_restore == True
